@model IList<LocationDetail>
@{
    ViewData["Title"] = "Map";
    
}

<html>
<head>
    <style>
                /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%;
            /* The width is the width of the web page */
        }
    </style>
</head>
<body>
    <h3>My Google Maps Demo</h3>
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
        // Initialize and add the map
        function initMap() {
            // The location of Tech Elevator
            var techElevator = { lat: 41.503756, lng: -81.638892 };
            // The map, centered at Tech Elevator
            var map = new google.maps.Map(
                document.getElementById('map'), { zoom: 11, center: techElevator });
            // The marker, positioned at Tech Elevator
            var marker = new google.maps.Marker({ position: techElevator, map: map });

            var cityCircle = new google.maps.Circle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                center: techElevator,
                radius: 500
            });

        }

    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAKzhMLUvwCaJupiGu-cNLevQG_Hl3DIcw&callback=initMap">
    </script>
</body>
</html>
