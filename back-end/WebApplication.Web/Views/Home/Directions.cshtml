@model LocationDetail
@{
    ViewData["Title"] = "Map";

}

@*<html>
<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%;
            /* The width is the width of the web page */
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        var map;

        function initMap() {
            // Create the map.
            var techElevator = { lat: 41.503756, lng: -81.638892 };
            var goldhorn = { lat: 41.521571, lng: - 81.651568 };
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            map = new google.maps.Map(document.getElementById('map'), {
                center: techElevator,
                zoom: 15,
                minZoom: 11,
                maxZoom: 18
            });
            directionsDisplay.setMap(map);

            //var onChangeHandler = function () {
            //    calculateAndDisplayRoute(directionsService, directionsDisplay);zkz7a
            //};

        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay) {
            directionsService.route({
                origin: techElevator,
                destination: goldhorn,
                travelMode: 'DRIVING'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });


            // Bounds for WalkCLE
            var allowedBounds = new google.maps.LatLngBounds(
                new google.maps.LatLng(41.459287, -81.716830),
                new google.maps.LatLng(41.584380, -81.575907));

            var lastValidCenter = map.getCenter();

            google.maps.event.addListener(map, 'center_changed', function () {
                if (allowedBounds.contains(map.getCenter())) {
                    // still within valid bounds, so save the last valid position
                    lastValidCenter = map.getCenter();
                    return;
                }

                // not valid anymore => return to last valid position
                map.panTo(lastValidCenter);
            });

        }

    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAKzhMLUvwCaJupiGu-cNLevQG_Hl3DIcw&libraries=places&callback=initMap" async defer></script>
</body>
</html>*@
